# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  flake,
  ...
}: {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")

    ../../modules/base-server.nix

    ../../system/services/spacebarchat
    ../../system/services/caddy.nix
    ../../system/services/cloudflared.nix
    ../../system/services/jankclient.nix
    ../../system/services/pocbot.nix
    ../../system/services/postgres.nix
    ../../system/services/vaultwarden.nix
    ../../system/services/rabbitmq.nix
  ];

  boot.initrd.availableKernelModules = ["ata_piix" "xhci_pci" "ahci" "virtio_pci" "sr_mod" "virtio_blk"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];
  # boot.kernelPackages = pkgs.linuxPackages_latest;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  system.autoUpgrade = {
    enable = true;
    flake = flake.outPath;
    flags = [
      "--update-input"
      "nixpkgs"
      "--update-input"
      "jankclient"
      "-L" # print build logs
    ];
    dates = "daily";
    randomizedDelaySec = "45min";
  };

  virtualisation.incus.agent.enable = true;
}
